# Project-specific Main Configuration Overrides
# This file allows you to customize main Quaestor settings for this specific project.
# 
# Configuration Precedence (highest to lowest):
# 1. Runtime API parameters (programmatic)
# 2. .quaestor/languages.yaml - project-specific language overrides  
# 3. .quaestor/config.yaml (this file) - general project configuration
# 4. src/quaestor/core/languages.yaml - base language configurations
# 5. Built-in defaults - fallback for missing values
#
# Usage:
# 1. Copy this file to .quaestor/config.yaml
# 2. Uncomment and modify the sections you want to override
# 3. Only include the specific settings you want to change
# 4. Other settings will inherit from built-in defaults

# Project version and mode settings
# version: "1.0"
# mode: "team"  # Options: "personal", "team"

# Hook system configuration
# hooks:
#   enabled: true
#   enforcement:
#     enabled: true
#     strict_mode: false        # Set to true for stricter enforcement
#   automation:
#     enabled: true
#     auto_commit: false        # Set to true to automatically commit changes
#   intelligence:
#     enabled: true
#     context_refresh: true     # Auto-refresh context on session start

# Quality gate configuration
# quality:
#   run_on_commit: true          # Run quality checks on commit
#   block_on_fail: false        # Block commits if quality checks fail
#   custom_commands:             # Custom quality commands
#     security_scan: "custom-security-tool scan"
#     performance_test: "custom-perf-tool test"

# Development workflow settings  
# workflow:
#   enforce_research: true       # Require research phase before implementation
#   min_research_files: 5        # Minimum files to examine during research
#   research_timeout_hours: 4    # Maximum time to spend in research phase

# Example configurations for different project types:

# Enterprise/Team Project Configuration
# version: "1.0"
# mode: "team"
# hooks:
#   enabled: true
#   enforcement:
#     enabled: true
#     strict_mode: true          # Strict enforcement for team projects
#   automation:
#     enabled: true
#     auto_commit: false         # Manual commits for review
# quality:
#   run_on_commit: true
#   block_on_fail: true          # Block bad commits in team environment
#   custom_commands:
#     security_scan: "semgrep --config=auto"
#     dependency_check: "safety check"
# workflow:
#   enforce_research: true
#   min_research_files: 8        # More thorough research for team projects
#   research_timeout_hours: 2

# Personal/Experimental Project Configuration
# version: "1.0" 
# mode: "personal"
# hooks:
#   enabled: true
#   enforcement:
#     enabled: true
#     strict_mode: false         # Relaxed enforcement for personal projects
#   automation:
#     enabled: true
#     auto_commit: true          # Auto-commit for personal projects
# quality:
#   run_on_commit: true
#   block_on_fail: false        # Don't block commits, just warn
# workflow:
#   enforce_research: false      # Skip research for quick experiments
#   min_research_files: 3        # Minimal research required

# CI/CD Pipeline Configuration
# version: "1.0"
# mode: "team"
# hooks:
#   enabled: true
#   enforcement:
#     enabled: true
#     strict_mode: true
# quality:
#   run_on_commit: true
#   block_on_fail: true          # Strict quality gates in CI
#   custom_commands:
#     lint_all: "pre-commit run --all-files"
#     security_audit: "npm audit --audit-level high"
#     license_check: "license-checker --production"
# workflow:
#   enforce_research: false      # Research handled by humans, not CI
#   min_research_files: 0
#   research_timeout_hours: 0

# Configuration field descriptions:
#
# version: string
#   - Configuration schema version
#   - Current version: "1.0"
#
# mode: string  
#   - Project collaboration mode
#   - Options: "personal", "team"
#   - Affects default enforcement levels and automation
#
# hooks.enabled: boolean
#   - Whether to run Quaestor hooks
#   - Disable for debugging or special circumstances
#
# hooks.enforcement.enabled: boolean
#   - Whether to enforce hook recommendations
#   - Disable to make hooks advisory only
#
# hooks.enforcement.strict_mode: boolean  
#   - Whether to use strict enforcement
#   - Strict mode treats warnings as errors
#
# hooks.automation.enabled: boolean
#   - Whether to enable automated actions
#   - Disable for full manual control
#
# hooks.automation.auto_commit: boolean
#   - Whether to automatically commit changes
#   - Useful for personal projects or CI pipelines
#
# hooks.intelligence.enabled: boolean
#   - Whether to enable AI intelligence features
#   - Disable to reduce external dependencies
#
# hooks.intelligence.context_refresh: boolean
#   - Whether to auto-refresh context on session start
#   - Disable to speed up session startup
#
# quality.run_on_commit: boolean
#   - Whether to run quality checks on commit
#   - Integrates with git pre-commit hooks
#
# quality.block_on_fail: boolean
#   - Whether to block commits if quality checks fail
#   - Set to true for strict quality enforcement
#
# quality.custom_commands: dict
#   - Custom quality check commands
#   - Key: command name, Value: shell command to execute
#
# workflow.enforce_research: boolean
#   - Whether to require research phase before implementation
#   - Helps ensure proper understanding before coding
#
# workflow.min_research_files: number
#   - Minimum number of files to examine during research
#   - Higher numbers encourage more thorough analysis
#
# workflow.research_timeout_hours: number
#   - Maximum time to spend in research phase
#   - Prevents getting stuck in analysis paralysis

# CLI Commands for Configuration:
# - quaestor config show                    # Show effective configuration
# - quaestor config get hooks.enabled      # Get specific value
# - quaestor config set mode "team"        # Set configuration value
# - quaestor config validate               # Validate configuration  
# - quaestor config reset                  # Reset to defaults
# - quaestor config init                   # Initialize config files